apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'io.fabric'

android {

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.remotejobs.io.app"
        minSdkVersion 21
        targetSdkVersion 28
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    def keystoreProperties = new Properties()
    def keystorePropertiesFile = file('../local.properties')
    def env = System.getenv()

    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    if(keystoreProperties["REMOTEJOBS_KEYSTORE_STORE"] == null) {
        // Load keystore properties from environment or set their default values
        if (env['REMOTEJOBS_KEYSTORE_STORE']) keystoreProperties.put('REMOTEJOBS_KEYSTORE_STORE', env['REMOTEJOBS_KEYSTORE_STORE'])
        else keystoreProperties.put('REMOTEJOBS_KEYSTORE_STORE', "../debug.keystore")

        if (env['REMOTEJOBS_KEYSTORE_ALIAS']) keystoreProperties.put('REMOTEJOBS_KEYSTORE_ALIAS', env['REMOTEJOBS_KEYSTORE_ALIAS'])
        else keystoreProperties.put('REMOTEJOBS_KEYSTORE_ALIAS', "AndroidDebugKey")

        if (env['REMOTEJOBS_KEYSTORE_KEY_PASS']) keystoreProperties.put('REMOTEJOBS_KEYSTORE_KEY_PASS', env['REMOTEJOBS_KEYSTORE_KEY_PASS'])
        else keystoreProperties.put('REMOTEJOBS_KEYSTORE_KEY_PASS', "android")

        if (env['REMOTEJOBS_KEYSTORE_ALIAS_PASS']) keystoreProperties.put('REMOTEJOBS_KEYSTORE_ALIAS_PASS', env['REMOTEJOBS_KEYSTORE_ALIAS_PASS'])
        else keystoreProperties.put('REMOTEJOBS_KEYSTORE_ALIAS_PASS', "android")
    }

    signingConfigs {
        debug {}
        release {
            if(keystoreProperties["REMOTEJOBS_KEYSTORE_STORE"] != '') {
                storeFile file(keystoreProperties["REMOTEJOBS_KEYSTORE_STORE"])
                keyAlias keystoreProperties["REMOTEJOBS_KEYSTORE_ALIAS"]
                storePassword keystoreProperties["REMOTEJOBS_KEYSTORE_KEY_PASS"]
                keyPassword keystoreProperties["REMOTEJOBS_KEYSTORE_ALIAS_PASS"]
            }
        }
    }

    buildTypes {
        debug {}

        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "experience"
    productFlavors {
        instant {
            versionCode 19
            versionName "1.19"
        }
        installed {
            versionCode 20
            versionName "1.20"
        }
    }


    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

androidExtensions {
    experimental = true
}

crashlytics { instantAppSupport true }

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.appcompat:appcompat:${rootProject.appcompat}"
    implementation "androidx.legacy:legacy-support-v4:${rootProject.legacy_support_v4}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.constraintlayout}"
    implementation "androidx.core:core-ktx:${rootProject.core_ktx}"
    implementation "com.google.android.material:material:${rootProject.material}"
    implementation "com.google.android:flexbox:${rootProject.flexbox}"
    implementation "com.google.android.instantapps:instantapps:${rootProject.instant_app}"
    implementation "com.google.android.play:core:${rootProject.play_core}"
    implementation "androidx.multidex:multidex:${rootProject.multidex}"
    /*############################## Apche commons #####################################*/
    implementation "org.apache.commons:commons-text:${rootProject.commons_text}"

    /*############################## Firebase #####################################*/
    implementation "com.google.firebase:firebase-core:${rootProject.firebase}"
    implementation "com.google.firebase:firebase-messaging:${rootProject.firebase_message}"
    /*############################################################################*/

    /*############################# Crashlytics ####################################*/
    implementation("com.crashlytics.sdk.android:crashlytics:${rootProject.crashlytics}@aar") {
        transitive = true
    }
    /*############################################################################*/

    /*########################## kotlin ##########################################*/
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlin_version"
    implementation "org.jetbrains.anko:anko-coroutines:${rootProject.anko_version}"
    implementation "org.jetbrains.anko:anko-commons:${rootProject.anko_version}"
    /*############################################################################*/

    /*########################### ReactiveX ######################################*/
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.rxandroid}"
    implementation "io.reactivex.rxjava2:rxjava:${rootProject.rxjava}"
    /*############################################################################*/

    /*############################ Retrofit ######################################*/
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.retrofit}"
    implementation "com.squareup.retrofit2:retrofit:${rootProject.retrofit}"
    /*############################################################################*/

    /*############################ Gson: Json Converter ##########################*/
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.retrofit}"
    implementation "com.google.code.gson:gson:${rootProject.gson}"
    /*############################################################################*/

    /*########################### Image libs #####################################*/
    implementation "com.squareup.picasso:picasso:${rootProject.picasso}"
    implementation 'com.github.sujithkanna:smileyrating:1.6.8'
    /*############################################################################*/

    /*########################### Animation #####################################*/
    implementation "com.airbnb.android:lottie:${rootProject.lottie}"
    /*############################################################################*/

    /*######################## Architetures Components ###########################*/
    // Room Database
    implementation "androidx.room:room-runtime:${rootProject.room_runtime}"
    implementation "androidx.room:room-rxjava2:${rootProject.room_rxjava2}"
    /*api "android.arch.persistence.room:testing:${rootProject.arch}"*/
    kapt "androidx.room:room-compiler:${rootProject.room_compiler}"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime:${rootProject.lifecycle_runtime}"
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.lifecycle_extensions}"
    kapt "androidx.lifecycle:lifecycle-compiler:${rootProject.lifecycle_compiler}"

    /*######################## Dependency injection ###########################*/
   /* implementation "org.kodein.di:kodein-di-generic-jvm:${rootProject.kodein}"
    implementation "org.kodein.di:kodein-di-framework-android-x:${rootProject.kodein}"
    implementation "org.kodein.di:kodein-di-conf-jvm:${rootProject.kodein}"*/
    /*############################################################################*/

    /*############################### Test ibs ###################################*/
    testImplementation "junit:junit:${rootProject.junit}"
    androidTestImplementation "androidx.test:runner:${rootProject.runner}"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${rootProject.kotlin_version}"

    // Mokito
    testImplementation "org.mockito:mockito-core:${rootProject.mockitoVersion}"

    // Mockserver for resquest mock
    testImplementation "br.com.concretesolutions:requestmatcher:${rootProject.requestMatcherVersion}"
    androidTestImplementation "br.com.concretesolutions:requestmatcher:${rootProject.requestMatcherVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${rootProject.mockwebserver}"

    // Arch Test for Archtecture components test
    testImplementation("androidx.arch.core:core-testing:${rootProject.core_testing}", {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })

    // Espresso for UI test
    androidTestImplementation("androidx.test.espresso:espresso-core:${rootProject.espresso_core}", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation("androidx.test.espresso:espresso-contrib:${rootProject.espresso_contrib}", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation("androidx.test.espresso:espresso-intents:${rootProject.espresso_intents}", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    testImplementation "androidx.test.espresso:espresso-idling-resource:${rootProject.espresso_idling_resource}"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:${rootProject.uiautomator}"
    /*############################################################################*/
}

apply plugin: 'com.google.gms.google-services'