apply plugin: 'com.android.application'
//apply plugin: "androidx.navigation.safeargs"

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.remotejobs.io.app"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }


    def keystoreProperties = new Properties()
    def keystorePropertiesFile = file('../local.properties')
    def env = System.getenv()

    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    } else {

        // Load keystore properties from environment or set their default values

        if (env['KEYSTORE_HOME']) keystoreProperties.put('RELEASE_STORE_FILE', env['RELEASE_STORE_FILE'])
        else keystoreProperties.put('RELEASE_STORE_FILE', "../remotejobs.jks")

        if (env['KEYSTORE_ALIAS']) keystoreProperties.put('RELEASE_KEY_ALIAS', env['RELEASE_KEY_ALIAS'])
        else keystoreProperties.put('RELEASE_KEY_ALIAS', "remotejobs")

        if (env['KEYSTORE_KEY_PASS']) keystoreProperties.put('RELEASE_STORE_PASSWORD', env['RELEASE_STORE_PASSWORD'])
        else keystoreProperties.put('RELEASE_STORE_PASSWORD', "myDefaultStorePass")

        if (env['KEYSTORE_KEY_PASS']) keystoreProperties.put('RELEASE_KEY_PASSWORD', env['RELEASE_KEY_PASSWORD'])
        else keystoreProperties.put('RELEASE_KEY_PASSWORD', "myDefaultKeyPass")
    }

    signingConfigs {
        debug {}
        release {
            storeFile file(keystoreProperties["RELEASE_STORE_FILE"])
            keyAlias keystoreProperties["RELEASE_KEY_ALIAS"]
            storePassword keystoreProperties["RELEASE_STORE_PASSWORD"]
            keyPassword keystoreProperties["RELEASE_KEY_PASSWORD"]
        }
    }

    buildTypes {
        debug {
            resValue "bool", "is_release", "false"
            minifyEnabled false
        }

        release {
            resValue "bool", "is_release", "true"
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    implementation project(':base')
    implementation project(':splash')
    implementation project(':home')
    implementation project(':highestpaid')
    implementation project(':companies')
}

apply plugin: 'com.google.gms.google-services'